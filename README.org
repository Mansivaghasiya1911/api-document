
English Readme | [[README-CN.org][中文说明]]

[[https://github.com/liuanxin/api-document-example-en][example project]]

** comment

People who have maintained the project should have experience.
If the interface documentation is written separately (org-mode, markdown, rap or even word),
as the project cycle progresses, the gap between the interface document and the real code will come the farther away.

This document collection application has appeared because some of the details based on swagger are not so good
(such as unable to process map, swagger-ui view response instructions need to be cut).

** useage

add maven
#+BEGIN_SRC xml
<dependency>
    <groupId>com.github.liuanxin</groupId>
    <artifactId>api-document</artifactId>
    <version>0.4.7</version>
</dependency>
#+END_SRC

add config for this
#+BEGIN_SRC java
@Configuration
@EnableApiInfo
public class ApiInfoConfig {
    @Bean
    public DocumentCopyright apiCopyright() {
        return new DocumentCopyright("title", "team", "version", "copyright")
                    // // if class or method has @ApiResponses, use that
                    // .setGlobalResponse(Arrays.asList(
                    //         new DocumentResponse(400, "param error"),
                    //         new DocumentResponse(500, "request error")
                    // ))
                    // // if some interface can't use @ApiIgnore, set this(url|method, method can be ignore)
                    // .setIgnoreUrlSet(Sets.newHashSet("/user*", "/product/info|post"))
                    // // generated on each api's param, see the @ApiTokens annotation below
                    // .setGlobalTokens(Arrays.asList(
                    //         DocumentParam.buildToken("x-token", "oauth info", "abc-xyz", ParamType.Header).setHasTextarea(true),
                    //         DocumentParam.buildToken("x-version", "api version", "1.0.0", ParamType.Query).setMust(true)
                    // ))
                    // // if true, api will return nil(when production use) default was false.
                    // .setOnline(true)
                    ;
    }
}
#+END_SRC

Then mark the corresponding annotations in the corresponding controller layer(only collect the documents related to
@RestController or @ResponseBody related classes and interfaces, If the result of the method is List,
Set or Map will be processed by ArrayList, HashSet and HashMap),
ResponseEntity will handle the generic type it defines (it will not be resolved without setting).

PS: You can refer to the global processing of [[https://github.com/liuanxin/api-document-example-en][example]].
For generics, be sure to use certain types, such as <String> <User> etc. If use a type like <T> <Object> will not be able to parse.
In addition, when has array of non-base data types in the return field(User[] or Gender[], Gender is an enum), please use List<User> List<Gender> to replace.


annotation for this
#+BEGIN_EXAMPLE
@ApiGroup --> in class or method. use the method if all of that
  value     --> module info, must set(name-description, name used to generate the anchor point, description used to display, separated by the horizontal line -, description is displayed as name if it is empty)
  index     --> more forward when smaller("index" first, "description" second, "name" third -> with sort), if set multi module and different index, use the smaller


@ApiResponses --> in class or method
  @ApiResponse  --> nested annotation
    code          --> Response Code, for example: 400
    msg           --> response message, for example: param error

for example:
@ApiResponses({
    @ApiResponse(code = 400, msg = "param error"),
    @ApiResponse(code = 500, msg = "request error")
})


@ApiMethod --> in method
  value      --> method title, must set
  develop    --> can not be set
  desc       --> description, can not be set
  index      --> more forward when smaller("index" first, "developer" second, "title" third -> with sort)
  commentInReturnExample  --> if false, comment will show with display separately, default true

@ApiIgnore --> in class or method. want to ignore some api, use it
  value      --> false will ignore


@ApiParam --> in param or field
  value     --> must set
  name      --> if set, will ignore param name or field name
  dataType  --> if type was custom can use(for example: enum, but param type was be int). can be: int、long、float、double、email、url、ipv4
  example   --> used in api examples, can not set
  paramType --> can not be set, Header or Query, default is Query, set to Header to indicate that the current value is passed in the header with request
  must      --> if param annotation @RequestParam(required = true) etc... will ignore this config
  textarea  --> default false

@ApiParamIgnore --> in param or field


@ApiReturn --> in field
  value      --> must set
  type       --> if type was custom can use(for example: enum, but return type was be int)
  example    --> return example, only if the field is a string or underlying data type(including BigInteger and BigDecimal)

@ApiReturnIgnore --> in field


@ApiTokens --> in class or method
  value      --> if set false, the api of the current method or class does not need to pass token information. When the global setting and some api are not needed, use @ApiTokens(false)
  token      --> @ApiToken[]

  @ApiToken  --> nested annotation
    name       --> must set
    desc       --> can not set
    example    --> can not set
    paramType  --> can not be set, Header or Query, default is Header
    must       --> default false
    textarea   --> default false

for example:
@ApiTokens(false)

@ApiTokens(token = {
    @ApiToken(name = "x-token", desc = "oauth info", example = "abc-xyz", textarea = true),
    @ApiToken(name = "x-version", desc = "api version", example = "1.0", paramType = ParamType.Query, must = true)
})
#+END_EXAMPLE

if not spring boot project, add this config
#+BEGIN_SRC xml
<mvc:resources mapping="/static/**" location="classpath:/static/" />
#+END_SRC

request --> ~http://ip:port/static/api-info-en.html~ (spring boot don't need /static second directory).\\
if want to test url info, request --> ~http://ip:port/static/api-info-en-example.html~

-----

Final document collect for this
[[###][https://raw.githubusercontent.com/liuanxin/image/master/api-en.png]]
-
[[###][https://raw.githubusercontent.com/liuanxin/image/master/api-en2.png]]
-
[[###][https://raw.githubusercontent.com/liuanxin/image/master/api-example-en.gif]]
-----
